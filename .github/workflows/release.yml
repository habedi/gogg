name: Make a Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  call_tests:
    uses: ./.github/workflows/tests.yml

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup MSYS2 Environment
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            make
            mingw-w64-x86_64-go
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-freeglut

      - name: Run Tests
        shell: msys2 {0}
        run: |
          make test

      - name: Build Windows Binary
        shell: msys2 {0}
        run: |
          make release GOGG_BINARY=gogg.exe

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gogg-windows-amd64
          path: bin/gogg.exe

  build-linux:
    runs-on: ubuntu-latest
    env:
      LANG: en_US.UTF-8
      LC_ALL: en_US.UTF-8
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install Dependencies
        run: |
          sudo apt-get update
          make install-deps

      - name: Run Tests
        run: |
          make test

      - name: Build Linux Binary
        run: |
          make release

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gogg-linux-amd64
          path: bin/gogg

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Install Dependencies
        run: |
          brew install make pkg-config glfw

      - name: Run Tests
        run: |
          make test

      - name: Build macOS Binary
        run: |
          make release-macos

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: gogg-macos-arm64
          path: bin/gogg

  release:
    runs-on: ubuntu-latest
    needs: [ build-windows, build-linux, build-macos ]
    permissions:
      contents: write
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4
        with:
          name: gogg-windows-amd64
          path: ./dist/windows

      - name: Download Linux Artifact
        uses: actions/download-artifact@v4
        with:
          name: gogg-linux-amd64
          path: ./dist/linux

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: gogg-macos-arm64
          path: ./dist/macos

      - name: List Downloaded Files (for debugging)
        run: ls -R ./dist

      - name: Create Archives for Each Platform
        run: |
          cd dist/windows && zip -r9 ../gogg-windows-amd64.zip gogg.exe && cd ../..
          cd dist/linux && zip -r9 ../gogg-linux-amd64.zip gogg && cd ../..
          cd dist/macos && zip -r9 ../gogg-macos-arm64.zip gogg && cd ../..

      - name: List Archives (for debugging)
        run: ls -l dist/gogg-*.zip

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/main' && startsWith(github.ref_name, 'v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ github.ref_name }}
          tag: ${{ github.ref_name }}
          body: |
            Release version ${{ github.ref_name }}
          artifacts: |
            dist/gogg-windows-amd64.zip
            dist/gogg-linux-amd64.zip
            dist/gogg-macos-arm64.zip
          draft: false
          prerelease: false
